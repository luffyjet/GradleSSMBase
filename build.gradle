group 'com.luffyjet'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'


repositories {
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    jcenter()
    mavenCentral()
}

configurations {
    mybatisGenerator
}



dependencies {
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.springframework:spring-test:${springVersion}"

    compile "javax.servlet:jstl:${jstlVersion}"
    providedCompile "javax.servlet:servlet-api:${servletApiVersion}"

    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework:spring-tx:${springVersion}"
    compile "org.springframework:spring-jdbc:${springVersion}"
    compile "org.springframework:spring-test:${springVersion}"

    compile "org.mybatis:mybatis:${mybatisVesion}"
    compile "org.mybatis:mybatis-spring:${mybatisSpringVersion}"
    compile "org.mybatis.generator:mybatis-generator-core:${mybatisGeneratorVersion}"
    compile "mysql:mysql-connector-java:${mysqlConnectorVersion}"
//    compile "tk.mybatis:mapper:${tkMybatisMapperVesion}"

    compile "com.alibaba:fastjson:${fastjsonVersion}"
    compile "log4j:log4j:${log4jVersion}"
    compile "org.apache.commons:commons-dbcp2:${dbcpVersion}"

    mybatisGenerator "org.mybatis.generator:mybatis-generator-core:${mybatisGeneratorVersion}"
    mybatisGenerator "mysql:mysql-connector-java:${mysqlConnectorVersion}"
//    mybatisGenerator "tk.mybatis:mapper:${tkMybatisMapperVesion}"

    compile "com.github.pagehelper:pagehelper:${pagehelperVersion}"
}


// 读取config文件夹中对应的配置文件
ext{
    def prop = new Properties();
    file("src/main/resources/config/mybatis/jdbc.properties")
            .withInputStream {
        prop.load(it)
    }

    prop.each {
        project.extensions.add("$it.key",it.value);
    }
}

// 利用ant创建一个自动生成MyBatis目录文件的task
task mybatisGenerate << {
    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = project['jdbc.driverClassName']
    ant.properties['connectionURL'] = project['jdbc.url']
    ant.properties['userId'] = project['jdbc.user']
    ant.properties['password'] = project['jdbc.pass']
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = project['modelPackage']
    ant.properties['mapperPackage'] = project['mapperPackage']
    ant.properties['sqlMapperPackage'] = project['sqlMapperPackage']

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )

    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/config/mybatis/generatorConfig.xml',
            verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}